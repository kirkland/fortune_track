= semantic_form_for @transaction do |f|
  %p= f.input :description, as: :text, input_html: { style: 'width: 600px; height: 100px' }
  %p= f.input :date, as: :string, input_html: { value: @transaction.date.presence || Time.now.to_date }
  %p= f.input :duplicate_transaction_id
  = render partial: 'line_item', collection: @line_items || @transaction.line_items
  %a#add_line_item{href: '#', onclick: "addLineItem()"} Add Line Item
  %p= f.submit

= render 'line_item', line_item_div_id: 'line_item_fields', style: 'display: none',
  line_item: LineItem.new

- content_for :js do
  :plain
    function addLineItem() {
      var newLineItem = $('#line_item_fields').clone().attr('id', '');
      newLineItem.insertBefore($('#add_line_item'));
      newLineItem.show();
    }

    function deleteLineItem(target) {
      var fields = $(target).closest('div');
      if ( fields.find('.line_item_id').val() === '' ) {
        // New record.
        console.log("new record");
        fields.remove();
      } else {
        fields.find('.deleted').val(true);
        fields.hide();
      }
    }

- content_for :ready_js do
  :plain
    // Initialize new records with two line items.
    // Check for presence of one exactly, since one will be the hidden prototype.
    if ( $('.line_item').length == 1 ) {
      addLineItem();
      addLineItem();
    }
